name: Deploy EMR API to Lightsail

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Use a fresh Ubuntu runner provided by GitHub Actions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to clone your repository code into the runner

      - name: Set up SSH key for Lightsail
        uses: webfactory/ssh-agent@v0.9.0 # Action to securely load your SSH private key
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # Uses the secret we just configured

      - name: Deploy to Lightsail via SSH
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          STORAGE_BUCKET_URL: ${{ secrets.STORAGE_BUCKET_URL }}
          STORAGE_USERNAME: ${{ secrets.STORAGE_USERNAME }}
          STORAGE_PASSWORD: ${{ secrets.STORAGE_PASSWORD }}
        run: |
          LIGHTSAIL_IP=${{ secrets.LIGHTSAIL_IP }}
          REMOTE_DIR="/home/ubuntu/EMR-SERVER"
          # Using SSH URL for cloning/pulling for consistency with SSH key setup
          REPO_SSH_URL="git@github.com:Virtual-Medical-Mission/EMR-SERVER.git" 

          # Use SSH to connect to Lightsail and run commands there
          ssh -o StrictHostKeyChecking=no ubuntu@$LIGHTSAIL_IP << 'EOF'
            # 1. Install Docker, Docker Compose, and Git (if not already present)
            sudo apt-get update && sudo apt-get install -y docker.io docker-compose git

            # 2. Add the 'ubuntu' user to the 'docker' group
            sudo usermod -aG docker ubuntu

            # 3. Ensure the project directory exists and is up-to-date
            # This section ensures your server always has the latest, clean code.
            mkdir -p $(dirname "${REMOTE_DIR}") # Ensure parent dir exists for cloning

            if [ -d "${REMOTE_DIR}/.git" ]; then
              echo "Repository already cloned. Pulling latest changes."
              cd "${REMOTE_DIR}" || exit 1
              # Forcefully discard any local changes and reset to remote main
              git reset --hard origin/main
              git clean -df # Remove untracked files and directories
              git pull origin main
            else
              echo "Repository not found. Cloning it now."
              git clone "${REPO_SSH_URL}" "${REMOTE_DIR}"
              cd "${REMOTE_DIR}" || exit 1
            fi

            # 4. Stop and remove any currently running containers for your project
            docker compose down -v --remove-orphans || true 

            # 5. Recreate/Update the .env file on the Lightsail server
            # This uses a here-document to write the entire file at once
            cat << ENV_VARS > .env
            POSTGRES_DB=$POSTGRES_DB
            POSTGRES_USER=$POSTGRES_USER
            POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            POSTGRES_HOST=$POSTGRES_HOST
            POSTGRES_PORT=$POSTGRES_PORT
            STORAGE_BUCKET_URL=$STORAGE_BUCKET_URL
            STORAGE_USERNAME=$STORAGE_USERNAME
            STORAGE_PASSWORD=$STORAGE_PASSWORD
            ENV_VARS

            # 6. Build and start your Docker containers
            docker compose up --build -d --force-recreate

            # 7. Clean up old, unused Docker images and stopped containers
            docker image prune -f
            docker container prune -f
          EOF
